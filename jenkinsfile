pipeline {
    agent any
    environment {
        AWS_REGION = 'ap-south-1'
        AMI_NAME_PATTERN = 'Windows_Server-2019-English-Full-Base*'
        AWS_ACCESS_KEY_ID = credentials('check_latest_ami')
        AWS_SECRET_ACCESS_KEY = credentials('check_latest_ami')
    }
    stages {
        stage('Check Latest AMI') {
            steps {
                script {
                    def amiId = sh(
                        script: "aws ec2 describe-images --region ${env.AWS_REGION} --owners amazon --filters 'Name=name,Values=${env.AMI_NAME_PATTERN}' --query 'Images[*].[ImageId, CreationDate]' --output text | sort -k2 -r | head -n1 | awk '{print \$1}'",
                        returnStdout: true
                    ).trim()
                    echo "Latest AMI ID is: ${amiId}"
                    env.AMI_ID = amiId // fixed typo, should be amiId instead of ami.id
                }
            }
        }

        stage('Terraform Init') {
            steps {
                sh 'terraform init'
            }
        }
        
        stage('Terraform Plan') {
            steps {
                sh "terraform plan -var='ami_id=${env.AMI_ID}'" // fixed quotes to use single quotes on the outside and double quotes on the inside
            }
        }
        
        stage('Terraform Apply') {
            steps {
                sh "terraform apply -var='ami_id=${env.AMI_ID}' -auto-approve" // fixed quotes to use single quotes on the outside and double quotes on the inside
            }
        }
    }
}
